function q(t) {
  return t < 0 ? -1 : 0 === t ? 0 : 1;
}
function nt(t, e, r) {
  return (1 - r) * t + r * e;
}
function qt(t, e, r) {
  return r < t ? t : e < r ? e : r;
}
function ht(t, e, r) {
  return r < t ? t : e < r ? e : r;
}
function Ot(t) {
  return (t %= 360) < 0 && (t += 360), t;
}
function Dt(t) {
  return (t %= 360) < 0 && (t += 360), t;
}
function jt(t, e) {
  return Dt(e - t) <= 180 ? 1 : -1;
}
function Nt(t, e) {
  return 180 - Math.abs(Math.abs(t - e) - 180);
}
function bt(t, e) {
  return [
    t[0] * e[0][0] + t[1] * e[0][1] + t[2] * e[0][2],
    t[0] * e[1][0] + t[1] * e[1][1] + t[2] * e[1][2],
    t[0] * e[2][0] + t[1] * e[2][1] + t[2] * e[2][2],
  ];
}
let zt = [
    [0.41233895, 0.35762064, 0.18051042],
    [0.2126, 0.7152, 0.0722],
    [0.01932141, 0.11916382, 0.95034478],
  ],
  Yt = [
    [3.2413774792388685, -1.5376652402851851, -0.49885366846268053],
    [-0.9691452513005321, 1.8758853451067872, 0.04156585616912061],
    [0.05562093689691305, -0.20395524564742123, 1.0571799111220335],
  ],
  wt = [95.047, 100, 108.883];
function ft(t, e, r) {
  return ((255 << 24) | ((255 & t) << 16) | ((255 & e) << 8) | (255 & r)) >>> 0;
}
function Et(t) {
  return ft(tt(t[0]), tt(t[1]), tt(t[2]));
}
function Wt(t) {
  return (t >> 24) & 255;
}
function dt(t) {
  return (t >> 16) & 255;
}
function mt(t) {
  return (t >> 8) & 255;
}
function gt(t) {
  return 255 & t;
}
function St(t, e, r) {
  var a = Yt,
    n = a[0][0] * t + a[0][1] * e + a[0][2] * r,
    o = a[1][0] * t + a[1][1] * e + a[1][2] * r,
    t = a[2][0] * t + a[2][1] * e + a[2][2] * r;
  return ft(tt(n), tt(o), tt(t));
}
function vt(t) {
  return bt([$(dt(t)), $(mt(t)), $(gt(t))], zt);
}
function Jt(t, e, r) {
  var a = wt,
    t = (t + 16) / 116,
    r = t - r / 200,
    e = ut(e / 500 + t),
    t = ut(t),
    r = ut(r);
  return St(e * a[0], t * a[1], r * a[2]);
}
function Xt(t) {
  var e = $(dt(t)),
    r = $(mt(t)),
    t = $(gt(t)),
    a = zt,
    n = a[0][0] * e + a[0][1] * r + a[0][2] * t,
    o = a[1][0] * e + a[1][1] * r + a[1][2] * t,
    e = a[2][0] * e + a[2][1] * r + a[2][2] * t,
    r = wt,
    a = n / r[0],
    t = o / r[1],
    n = e / r[2],
    o = at(a),
    e = at(t);
  return [116 * e - 16, 500 * (o - e), 200 * (e - at(n))];
}
function $t(t) {
  t = tt(Q(t));
  return ft(t, t, t);
}
function Ct(t) {
  return 116 * at(vt(t)[1] / 100) - 16;
}
function Q(t) {
  return 100 * ut((t + 16) / 116);
}
function It(t) {
  return 116 * at(t / 100) - 16;
}
function $(t) {
  t /= 255;
  return t <= 0.040449936
    ? (t / 12.92) * 100
    : 100 * Math.pow((0.055 + t) / 1.055, 2.4);
}
function tt(t) {
  t /= 100;
  let e = 0;
  return (
    (e = t <= 0.0031308 ? 12.92 * t : 1.055 * Math.pow(t, 1 / 2.4) - 0.055),
    qt(0, 255, Math.round(255 * e))
  );
}
function Kt() {
  return wt;
}
function at(t) {
  return 0.008856451679035631 < t
    ? Math.pow(t, 1 / 3)
    : ((24389 / 27) * t + 16) / 116;
}
function ut(t) {
  var e = t * t * t;
  return 0.008856451679035631 < e ? e : (116 * t - 16) / (24389 / 27);
}
class v {
  static make(
    t = Kt(),
    e = ((200 / Math.PI) * Q(50)) / 100,
    r = 50,
    a = 2,
    n = !1
  ) {
    var o = 0.401288 * t[0] + 0.650173 * t[1] + -0.051461 * t[2],
      i = -0.250268 * t[0] + 1.204414 * t[1] + 0.045854 * t[2],
      s = -0.002079 * t[0] + 0.048952 * t[1] + 0.953127 * t[2],
      a = 0.8 + a / 10,
      h =
        0.9 <= a
          ? nt(0.59, 0.69, 10 * (a - 0.9))
          : nt(0.525, 0.59, 10 * (a - 0.8)),
      n = n ? 1 : a * (1 - (1 / 3.6) * Math.exp((-e - 42) / 92)),
      n = [
        (100 / o) * (n = 1 < n ? 1 : n < 0 ? 0 : n) + 1 - n,
        (100 / i) * n + 1 - n,
        (100 / s) * n + 1 - n,
      ],
      c = 1 / (5 * e + 1),
      c = c * c * c * c,
      u = 1 - c,
      c = c * e + 0.1 * u * u * Math.cbrt(5 * e),
      u = Q(r) / t[1],
      e = 1.48 + Math.sqrt(u),
      r = 0.725 / Math.pow(u, 0.2),
      t = r,
      o = [
        Math.pow((c * n[0] * o) / 100, 0.42),
        Math.pow((c * n[1] * i) / 100, 0.42),
        Math.pow((c * n[2] * s) / 100, 0.42),
      ],
      i = [
        (400 * o[0]) / (o[0] + 27.13),
        (400 * o[1]) / (o[1] + 27.13),
        (400 * o[2]) / (o[2] + 27.13),
      ],
      s = (2 * i[0] + i[1] + 0.05 * i[2]) * r;
    return new v(u, s, r, t, h, a, n, c, Math.pow(c, 0.25), e);
  }
  constructor(t, e, r, a, n, o, i, s, h, c) {
    (this.n = t),
      (this.aw = e),
      (this.nbb = r),
      (this.ncb = a),
      (this.c = n),
      (this.nc = o),
      (this.rgbD = i),
      (this.fl = s),
      (this.fLRoot = h),
      (this.z = c);
  }
}
v.DEFAULT = v.make();
class z {
  constructor(t, e, r, a, n, o, i, s, h) {
    (this.hue = t),
      (this.chroma = e),
      (this.j = r),
      (this.q = a),
      (this.m = n),
      (this.s = o),
      (this.jstar = i),
      (this.astar = s),
      (this.bstar = h);
  }
  distance(t) {
    var e = this.jstar - t.jstar,
      r = this.astar - t.astar,
      t = this.bstar - t.bstar,
      e = Math.sqrt(e * e + r * r + t * t);
    return 1.41 * Math.pow(e, 0.63);
  }
  static fromInt(t) {
    return z.fromIntInViewingConditions(t, v.DEFAULT);
  }
  static fromIntInViewingConditions(t, e) {
    var r = (65280 & t) >> 8,
      a = 255 & t,
      t = $((16711680 & t) >> 16),
      r = $(r),
      a = $(a),
      n = 0.41233895 * t + 0.35762064 * r + 0.18051042 * a,
      o = 0.2126 * t + 0.7152 * r + 0.0722 * a,
      t = 0.01932141 * t + 0.11916382 * r + 0.95034478 * a,
      r = e.rgbD[0] * (0.401288 * n + 0.650173 * o - 0.051461 * t),
      a = e.rgbD[1] * (-0.250268 * n + 1.204414 * o + 0.045854 * t),
      n = e.rgbD[2] * (-0.002079 * n + 0.048952 * o + 0.953127 * t),
      o = Math.pow((e.fl * Math.abs(r)) / 100, 0.42),
      t = Math.pow((e.fl * Math.abs(a)) / 100, 0.42),
      i = Math.pow((e.fl * Math.abs(n)) / 100, 0.42),
      r = (400 * q(r) * o) / (o + 27.13),
      o = (400 * q(a) * t) / (t + 27.13),
      a = (400 * q(n) * i) / (i + 27.13),
      t = (11 * r + -12 * o + a) / 11,
      n = (r + o - 2 * a) / 9,
      i = (20 * r + 20 * o + 21 * a) / 20,
      r = (40 * r + 20 * o + a) / 20,
      o = (180 * Math.atan2(n, t)) / Math.PI,
      a = o < 0 ? 360 + o : 360 <= o ? o - 360 : o,
      o = (a * Math.PI) / 180,
      r = r * e.nbb,
      r = 100 * Math.pow(r / e.aw, e.c * e.z),
      s = (4 / e.c) * Math.sqrt(r / 100) * (e.aw + 4) * e.fLRoot,
      t =
        ((5e4 / 13) *
          (0.25 *
            (Math.cos(((a < 20.14 ? 360 + a : a) * Math.PI) / 180 + 2) + 3.8)) *
          e.nc *
          e.ncb *
          Math.sqrt(t * t + n * n)) /
        (0.305 + i),
      n = Math.pow(t, 0.9) * Math.pow(1.64 - Math.pow(0.29, e.n), 0.73),
      i = n * Math.sqrt(r / 100),
      t = i * e.fLRoot,
      n = 50 * Math.sqrt((n * e.c) / (e.aw + 4)),
      e = ((1 + 100 * 0.007) * r) / (1 + 0.007 * r),
      h = (1 / 0.0228) * Math.log(1 + 0.0228 * t),
      c = h * Math.cos(o),
      h = h * Math.sin(o);
    return new z(a, i, r, s, t, n, e, c, h);
  }
  static fromJch(t, e, r) {
    return z.fromJchInViewingConditions(t, e, r, v.DEFAULT);
  }
  static fromJchInViewingConditions(t, e, r, a) {
    var n = (4 / a.c) * Math.sqrt(t / 100) * (a.aw + 4) * a.fLRoot,
      o = e * a.fLRoot,
      i = e / Math.sqrt(t / 100),
      i = 50 * Math.sqrt((i * a.c) / (a.aw + 4)),
      a = (r * Math.PI) / 180,
      s = ((1 + 100 * 0.007) * t) / (1 + 0.007 * t),
      h = (1 / 0.0228) * Math.log(1 + 0.0228 * o),
      c = h * Math.cos(a),
      h = h * Math.sin(a);
    return new z(r, e, t, n, o, i, s, c, h);
  }
  static fromUcs(t, e, r) {
    return z.fromUcsInViewingConditions(t, e, r, v.DEFAULT);
  }
  static fromUcsInViewingConditions(t, e, r, a) {
    var n = Math.sqrt(e * e + r * r),
      n = (Math.exp(0.0228 * n) - 1) / 0.0228 / a.fLRoot;
    let o = Math.atan2(r, e) * (180 / Math.PI);
    o < 0 && (o += 360);
    r = t / (1 - 0.007 * (t - 100));
    return z.fromJchInViewingConditions(r, n, o, a);
  }
  toInt() {
    return this.viewed(v.DEFAULT);
  }
  viewed(t) {
    var e =
        0 === this.chroma || 0 === this.j
          ? 0
          : this.chroma / Math.sqrt(this.j / 100),
      e = Math.pow(e / Math.pow(1.64 - Math.pow(0.29, t.n), 0.73), 1 / 0.9),
      r = (this.hue * Math.PI) / 180,
      a = 0.25 * (Math.cos(2 + r) + 3.8),
      n = t.aw * Math.pow(this.j / 100, 1 / t.c / t.z),
      a = (5e4 / 13) * a * t.nc * t.ncb,
      n = n / t.nbb,
      o = Math.sin(r),
      r = Math.cos(r),
      a = (23 * (0.305 + n) * e) / (23 * a + 11 * e * r + 108 * e * o),
      e = a * r,
      r = a * o,
      a = (460 * n + 451 * e + 288 * r) / 1403,
      o = (460 * n - 891 * e - 261 * r) / 1403,
      n = (460 * n - 220 * e - 6300 * r) / 1403,
      e = Math.max(0, (27.13 * Math.abs(a)) / (400 - Math.abs(a))),
      r = q(a) * (100 / t.fl) * Math.pow(e, 1 / 0.42),
      a = Math.max(0, (27.13 * Math.abs(o)) / (400 - Math.abs(o))),
      e = q(o) * (100 / t.fl) * Math.pow(a, 1 / 0.42),
      o = Math.max(0, (27.13 * Math.abs(n)) / (400 - Math.abs(n))),
      a = q(n) * (100 / t.fl) * Math.pow(o, 1 / 0.42),
      n = r / t.rgbD[0],
      o = e / t.rgbD[1],
      r = a / t.rgbD[2];
    return St(
      1.86206786 * n - 1.01125463 * o + 0.14918677 * r,
      0.38752654 * n + 0.62144744 * o - 0.00897398 * r,
      -0.0158415 * n - 0.03412294 * o + 1.04996444 * r
    );
  }
  static fromXyzInViewingConditions(t, e, r, a) {
    var n = a.rgbD[0] * (0.401288 * t + 0.650173 * e - 0.051461 * r),
      o = a.rgbD[1] * (-0.250268 * t + 1.204414 * e + 0.045854 * r),
      t = a.rgbD[2] * (-0.002079 * t + 0.048952 * e + 0.953127 * r),
      e = Math.pow((a.fl * Math.abs(n)) / 100, 0.42),
      r = Math.pow((a.fl * Math.abs(o)) / 100, 0.42),
      i = Math.pow((a.fl * Math.abs(t)) / 100, 0.42),
      n = (400 * q(n) * e) / (e + 27.13),
      e = (400 * q(o) * r) / (r + 27.13),
      o = (400 * q(t) * i) / (i + 27.13),
      r = (11 * n + -12 * e + o) / 11,
      t = (n + e - 2 * o) / 9,
      i = (20 * n + 20 * e + 21 * o) / 20,
      n = (40 * n + 20 * e + o) / 20,
      e = (180 * Math.atan2(t, r)) / Math.PI,
      o = e < 0 ? 360 + e : 360 <= e ? e - 360 : e,
      e = (o * Math.PI) / 180,
      n = n * a.nbb,
      n = 100 * Math.pow(n / a.aw, a.c * a.z),
      s = (4 / a.c) * Math.sqrt(n / 100) * (a.aw + 4) * a.fLRoot,
      r =
        ((5e4 / 13) *
          (0.25 *
            (Math.cos(((o < 20.14 ? 360 + o : o) * Math.PI) / 180 + 2) + 3.8)) *
          a.nc *
          a.ncb *
          Math.sqrt(r * r + t * t)) /
        (0.305 + i),
      t = Math.pow(r, 0.9) * Math.pow(1.64 - Math.pow(0.29, a.n), 0.73),
      i = t * Math.sqrt(n / 100),
      r = i * a.fLRoot,
      t = 50 * Math.sqrt((t * a.c) / (a.aw + 4)),
      a = ((1 + 100 * 0.007) * n) / (1 + 0.007 * n),
      h = Math.log(1 + 0.0228 * r) / 0.0228,
      c = h * Math.cos(e),
      h = h * Math.sin(e);
    return new z(o, i, n, s, r, t, a, c, h);
  }
  xyzInViewingConditions(t) {
    var e =
        0 === this.chroma || 0 === this.j
          ? 0
          : this.chroma / Math.sqrt(this.j / 100),
      e = Math.pow(e / Math.pow(1.64 - Math.pow(0.29, t.n), 0.73), 1 / 0.9),
      r = (this.hue * Math.PI) / 180,
      a = 0.25 * (Math.cos(2 + r) + 3.8),
      n = t.aw * Math.pow(this.j / 100, 1 / t.c / t.z),
      a = (5e4 / 13) * a * t.nc * t.ncb,
      n = n / t.nbb,
      o = Math.sin(r),
      r = Math.cos(r),
      a = (23 * (0.305 + n) * e) / (23 * a + 11 * e * r + 108 * e * o),
      e = a * r,
      r = a * o,
      a = (460 * n + 451 * e + 288 * r) / 1403,
      o = (460 * n - 891 * e - 261 * r) / 1403,
      n = (460 * n - 220 * e - 6300 * r) / 1403,
      e = Math.max(0, (27.13 * Math.abs(a)) / (400 - Math.abs(a))),
      r = q(a) * (100 / t.fl) * Math.pow(e, 1 / 0.42),
      a = Math.max(0, (27.13 * Math.abs(o)) / (400 - Math.abs(o))),
      e = q(o) * (100 / t.fl) * Math.pow(a, 1 / 0.42),
      o = Math.max(0, (27.13 * Math.abs(n)) / (400 - Math.abs(n))),
      a = q(n) * (100 / t.fl) * Math.pow(o, 1 / 0.42),
      n = r / t.rgbD[0],
      o = e / t.rgbD[1],
      r = a / t.rgbD[2];
    return [
      1.86206786 * n - 1.01125463 * o + 0.14918677 * r,
      0.38752654 * n + 0.62144744 * o - 0.00897398 * r,
      -0.0158415 * n - 0.03412294 * o + 1.04996444 * r,
    ];
  }
}
class C {
  static sanitizeRadians(t) {
    return (t + 8 * Math.PI) % (2 * Math.PI);
  }
  static trueDelinearized(t) {
    t /= 100;
    let e = 0;
    return (
      255 *
      (e = t <= 0.0031308 ? 12.92 * t : 1.055 * Math.pow(t, 1 / 2.4) - 0.055)
    );
  }
  static chromaticAdaptation(t) {
    var e = Math.pow(Math.abs(t), 0.42);
    return (400 * q(t) * e) / (e + 27.13);
  }
  static hueOf(t) {
    var t = bt(t, C.SCALED_DISCOUNT_FROM_LINRGB),
      e = C.chromaticAdaptation(t[0]),
      r = C.chromaticAdaptation(t[1]),
      t = C.chromaticAdaptation(t[2]);
    return Math.atan2((e + r - 2 * t) / 9, (11 * e + -12 * r + t) / 11);
  }
  static areInCyclicOrder(t, e, r) {
    return C.sanitizeRadians(e - t) < C.sanitizeRadians(r - t);
  }
  static intercept(t, e, r) {
    return (e - t) / (r - t);
  }
  static lerpPoint(t, e, r) {
    return [
      t[0] + (r[0] - t[0]) * e,
      t[1] + (r[1] - t[1]) * e,
      t[2] + (r[2] - t[2]) * e,
    ];
  }
  static setCoordinate(t, e, r, a) {
    e = C.intercept(t[a], e, r[a]);
    return C.lerpPoint(t, e, r);
  }
  static isBounded(t) {
    return 0 <= t && t <= 100;
  }
  static nthVertex(t, e) {
    var r,
      a,
      n,
      o = C.Y_FROM_LINRGB[0],
      i = C.Y_FROM_LINRGB[1],
      s = C.Y_FROM_LINRGB[2],
      h = e % 4 <= 1 ? 0 : 100,
      c = e % 2 == 0 ? 0 : 100;
    return e < 4
      ? ((a = (t - (r = h) * i - (n = c) * s) / o),
        C.isBounded(a) ? [a, r, n] : [-1, -1, -1])
      : e < 8
      ? ((n = (t - (a = c) * o - (r = h) * s) / i),
        C.isBounded(n) ? [a, n, r] : [-1, -1, -1])
      : ((n = (t - (e = h) * o - (a = c) * i) / s),
        C.isBounded(n) ? [e, a, n] : [-1, -1, -1]);
  }
  static bisectToSegment(e, r) {
    let a = [-1, -1, -1],
      n = a,
      o = 0,
      i = 0,
      s = !1,
      h = !0;
    for (let t = 0; t < 12; t++) {
      var c,
        u = C.nthVertex(e, t);
      u[0] < 0 ||
        ((c = C.hueOf(u)),
        s
          ? (h || C.areInCyclicOrder(o, c, i)) &&
            ((h = !1),
            C.areInCyclicOrder(o, r, c)
              ? ((n = u), (i = c))
              : ((a = u), (o = c)))
          : ((a = u), (n = u), (o = c), (i = c), (s = !0)));
    }
    return [a, n];
  }
  static midpoint(t, e) {
    return [(t[0] + e[0]) / 2, (t[1] + e[1]) / 2, (t[2] + e[2]) / 2];
  }
  static criticalPlaneBelow(t) {
    return Math.floor(t - 0.5);
  }
  static criticalPlaneAbove(t) {
    return Math.ceil(t - 0.5);
  }
  static bisectToLimit(t, n) {
    t = C.bisectToSegment(t, n);
    let o = t[0],
      i = C.hueOf(o),
      s = t[1];
    for (let a = 0; a < 3; a++)
      if (o[a] !== s[a]) {
        let e = -1,
          r = 255;
        r =
          o[a] < s[a]
            ? ((e = C.criticalPlaneBelow(C.trueDelinearized(o[a]))),
              C.criticalPlaneAbove(C.trueDelinearized(s[a])))
            : ((e = C.criticalPlaneAbove(C.trueDelinearized(o[a]))),
              C.criticalPlaneBelow(C.trueDelinearized(s[a])));
        for (let t = 0; t < 8 && !(Math.abs(r - e) <= 1); t++) {
          var h = Math.floor((e + r) / 2),
            c = C.CRITICAL_PLANES[h],
            c = C.setCoordinate(o, c, s, a),
            u = C.hueOf(c);
          C.areInCyclicOrder(i, n, u)
            ? ((s = c), (r = h))
            : ((o = c), (i = u), (e = h));
        }
      }
    return C.midpoint(o, s);
  }
  static inverseChromaticAdaptation(t) {
    var e = Math.abs(t),
      e = Math.max(0, (27.13 * e) / (400 - e));
    return q(t) * Math.pow(e, 1 / 0.42);
  }
  static findResultByJ(t, e, r) {
    let a = 11 * Math.sqrt(r);
    var n = v.DEFAULT,
      o = 1 / Math.pow(1.64 - Math.pow(0.29, n.n), 0.73),
      i = 0.25 * (Math.cos(t + 2) + 3.8) * (5e4 / 13) * n.nc * n.ncb,
      s = Math.sin(t),
      h = Math.cos(t);
    for (let t = 0; t < 5; t++) {
      var c = a / 100,
        u = 0 === e || 0 === a ? 0 : e / Math.sqrt(c),
        u = Math.pow(u * o, 1 / 0.9),
        c = (n.aw * Math.pow(c, 1 / n.c / n.z)) / n.nbb,
        u = (23 * (0.305 + c) * u) / (23 * i + 11 * u * h + 108 * u * s),
        l = u * h,
        u = u * s,
        m = (460 * c + 451 * l + 288 * u) / 1403,
        d = (460 * c - 891 * l - 261 * u) / 1403,
        c = (460 * c - 220 * l - 6300 * u) / 1403,
        l = bt(
          [
            C.inverseChromaticAdaptation(m),
            C.inverseChromaticAdaptation(d),
            C.inverseChromaticAdaptation(c),
          ],
          C.LINRGB_FROM_SCALED_DISCOUNT
        );
      if (l[0] < 0 || l[1] < 0 || l[2] < 0) return 0;
      (u = C.Y_FROM_LINRGB[0]),
        (m = C.Y_FROM_LINRGB[1]),
        (d = C.Y_FROM_LINRGB[2]),
        (c = u * l[0] + m * l[1] + d * l[2]);
      if (c <= 0) return 0;
      if (4 === t || Math.abs(c - r) < 0.002)
        return 100.01 < l[0] || 100.01 < l[1] || 100.01 < l[2] ? 0 : Et(l);
      a -= ((c - r) * a) / (2 * c);
    }
    return 0;
  }
  static solveToInt(t, e, r) {
    return e < 1e-4 || r < 1e-4 || 99.9999 < r
      ? $t(r)
      : ((t = ((t = Dt(t)) / 180) * Math.PI),
        (r = Q(r)),
        0 !== (e = C.findResultByJ(t, e, r)) ? e : Et(C.bisectToLimit(r, t)));
  }
  static solveToCam(t, e, r) {
    return z.fromInt(C.solveToInt(t, e, r));
  }
}
(C.SCALED_DISCOUNT_FROM_LINRGB = [
  [0.001200833568784504, 0.002389694492170889, 0.0002795742885861124],
  [0.0005891086651375999, 0.0029785502573438758, 0.0003270666104008398],
  [0.00010146692491640572, 0.0005364214359186694, 0.0032979401770712076],
]),
  (C.LINRGB_FROM_SCALED_DISCOUNT = [
    [1373.2198709594231, -1100.4251190754821, -7.278681089101213],
    [-271.815969077903, 559.6580465940733, -32.46047482791194],
    [1.9622899599665666, -57.173814538844006, 308.7233197812385],
  ]),
  (C.Y_FROM_LINRGB = [0.2126, 0.7152, 0.0722]),
  (C.CRITICAL_PLANES = [
    0.015176349177441876, 0.045529047532325624, 0.07588174588720938,
    0.10623444424209313, 0.13658714259697685, 0.16693984095186062,
    0.19729253930674434, 0.2276452376616281, 0.2579979360165119,
    0.28835063437139563, 0.3188300904430532, 0.350925934958123,
    0.3848314933096426, 0.42057480301049466, 0.458183274052838,
    0.4976837250274023, 0.5391024159806381, 0.5824650784040898,
    0.6277969426914107, 0.6751227633498623, 0.7244668422128921,
    0.775853049866786, 0.829304845476233, 0.8848452951698498, 0.942497089126609,
    1.0022825574869039, 1.0642236851973577, 1.1283421258858297,
    1.1946592148522128, 1.2631959812511864, 1.3339731595349034,
    1.407011200216447, 1.4823302800086415, 1.5599503113873272,
    1.6398909516233677, 1.7221716113234105, 1.8068114625156377,
    1.8938294463134073, 1.9832442801866852, 2.075074464868551,
    2.1693382909216234, 2.2660538449872063, 2.36523901573795,
    2.4669114995532007, 2.5710888059345764, 2.6777882626779785,
    2.7870270208169257, 2.898822059350997, 3.0131901897720907,
    3.1301480604002863, 3.2497121605402226, 3.3718988244681087,
    3.4967242352587946, 3.624204428461639, 3.754355295633311, 3.887192587735158,
    4.022731918402185, 4.160988767090289, 4.301978482107941, 4.445716283538092,
    4.592217266055746, 4.741496401646282, 4.893568542229298, 5.048448422192488,
    5.20615066083972, 5.3666897647573375, 5.5300801301023865, 5.696336044816294,
    5.865471690767354, 6.037501145825082, 6.212438385869475, 6.390297286737924,
    6.571091626112461, 6.7548350853498045, 6.941541251256611, 7.131223617812143,
    7.323895587840543, 7.5195704746346665, 7.7182615035334345,
    7.919981813454504, 8.124744458384042, 8.332562408825165, 8.543448553206703,
    8.757415699253682, 8.974476575321063, 9.194643831691977, 9.417930041841839,
    9.644347703669503, 9.873909240696694, 10.106627003236781,
    10.342513269534024, 10.58158024687427, 10.8238400726681, 11.069304815507364,
    11.317986476196008, 11.569896988756009, 11.825048221409341,
    12.083451977536606, 12.345119996613247, 12.610063955123938,
    12.878295467455942, 13.149826086772048, 13.42466730586372,
    13.702830557985108, 13.984327217668513, 14.269168601521828,
    14.55736596900856, 14.848930523210871, 15.143873411576273,
    15.44220572664832, 15.743938506781891, 16.04908273684337, 16.35764934889634,
    16.66964922287304, 16.985093187232053, 17.30399201960269, 17.62635644741625,
    17.95219714852476, 18.281524751807332, 18.614349837764564,
    18.95068293910138, 19.290534541298456, 19.633915083172692,
    19.98083495742689, 20.331304511189067, 20.685334046541502,
    21.042933821039977, 21.404114048223256, 21.76888489811322,
    22.137256497705877, 22.50923893145328, 22.884842241736916,
    23.264076429332462, 23.6469514538663, 24.033477234264016, 24.42366364919083,
    24.817520537484558, 25.21505769858089, 25.61628489293138,
    26.021211842414342, 26.429848230738664, 26.842203703840827,
    27.258287870275353, 27.678110301598522, 28.10168053274597,
    28.529008062403893, 28.96010235337422, 29.39497283293396, 29.83362889318845,
    30.276079891419332, 30.722335150426627, 31.172403958865512,
    31.62629557157785, 32.08401920991837, 32.54558406207592, 33.010999283389665,
    33.4802739966603, 33.953417292456834, 34.430438229418264,
    34.911345834551085, 35.39614910352207, 35.88485700094671, 36.37747846067349,
    36.87402238606382, 37.37449765026789, 37.87891309649659, 38.38727753828926,
    38.89959975977785, 39.41588851594697, 39.93615253289054, 40.460400508064545,
    40.98864111053629, 41.520882981230194, 42.05713473317016,
    42.597404951718396, 43.141702194811224, 43.6900349931913, 44.24241185063697,
    44.798841244188324, 45.35933162437017, 45.92389141541209, 46.49252901546552,
    47.065252796817916, 47.64207110610409, 48.22299226451468,
    48.808024568002054, 49.3971762874833, 49.9904556690408, 50.587870934119984,
    51.189430279724725, 51.79514187861014, 52.40501387947288, 53.0190544071392,
    53.637271562750364, 54.259673423945976, 54.88626804504493,
    55.517063457223934, 56.15206766869424, 56.79128866487574, 57.43473440856916,
    58.08241284012621, 58.734331877617365, 59.39049941699807, 60.05092333227251,
    60.715611475655585, 61.38457167773311, 62.057811747619894, 62.7353394731159,
    63.417162620860914, 64.10328893648692, 64.79372614476921, 65.48848194977529,
    66.18756403501224, 66.89098006357258, 67.59873767827808, 68.31084450182222,
    69.02730813691093, 69.74813616640164, 70.47333615344107, 71.20291564160104,
    71.93688215501312, 72.67524319850172, 73.41800625771542, 74.16517879925733,
    74.9167682708136, 75.67278210128072, 76.43322770089146, 77.1981124613393,
    77.96744375590167, 78.74122893956174, 79.51947534912904, 80.30219030335869,
    81.08938110306934, 81.88105503125999, 82.67721935322541, 83.4778813166706,
    84.28304815182372, 85.09272707154808, 85.90692527145302, 86.72564993000343,
    87.54890820862819, 88.3767072518277, 89.2090541872801, 90.04595612594655,
    90.88742016217518, 91.73345337380438, 92.58406282226491, 93.43925555268066,
    94.29903859396902, 95.16341895893969, 96.03240364439274, 96.9059996312159,
    97.78421388448044, 98.6670533535366, 99.55452497210776,
  ]);
class E {
  static from(t, e, r) {
    return new E(C.solveToInt(t, e, r));
  }
  static fromInt(t) {
    return new E(t);
  }
  toInt() {
    return this.argb;
  }
  get hue() {
    return this.internalHue;
  }
  set hue(t) {
    this.setInternalState(
      C.solveToInt(t, this.internalChroma, this.internalTone)
    );
  }
  get chroma() {
    return this.internalChroma;
  }
  set chroma(t) {
    this.setInternalState(C.solveToInt(this.internalHue, t, this.internalTone));
  }
  get tone() {
    return this.internalTone;
  }
  set tone(t) {
    this.setInternalState(
      C.solveToInt(this.internalHue, this.internalChroma, t)
    );
  }
  constructor(t) {
    this.argb = t;
    var e = z.fromInt(t);
    (this.internalHue = e.hue),
      (this.internalChroma = e.chroma),
      (this.internalTone = Ct(t)),
      (this.argb = t);
  }
  setInternalState(t) {
    var e = z.fromInt(t);
    (this.internalHue = e.hue),
      (this.internalChroma = e.chroma),
      (this.internalTone = Ct(t)),
      (this.argb = t);
  }
  inViewingConditions(t) {
    var t = z.fromInt(this.toInt()).xyzInViewingConditions(t),
      e = z.fromXyzInViewingConditions(t[0], t[1], t[2], v.make());
    return E.from(e.hue, e.chroma, It(t[1]));
  }
}
class xt {
  static harmonize(t, e) {
    var t = E.fromInt(t),
      e = E.fromInt(e),
      r = Nt(t.hue, e.hue),
      r = Math.min(0.5 * r, 15),
      r = Dt(t.hue + r * jt(t.hue, e.hue));
    return E.from(r, t.chroma, t.tone).toInt();
  }
  static hctHue(t, e, r) {
    (e = xt.cam16Ucs(t, e, r)), (r = z.fromInt(e)), (e = z.fromInt(t));
    return E.from(r.hue, e.chroma, Ct(t)).toInt();
  }
  static cam16Ucs(t, e, r) {
    var t = z.fromInt(t),
      e = z.fromInt(e),
      a = t.jstar,
      n = t.astar,
      t = t.bstar,
      a = a + (e.jstar - a) * r,
      n = n + (e.astar - n) * r,
      e = t + (e.bstar - t) * r;
    return z.fromUcs(a, n, e).toInt();
  }
}
class N {
  static ratioOfTones(t, e) {
    return (t = ht(0, 100, t)), (e = ht(0, 100, e)), N.ratioOfYs(Q(t), Q(e));
  }
  static ratioOfYs(t, e) {
    var r = e < t ? t : e;
    return (r + 5) / ((r === e ? t : e) + 5);
  }
  static lighter(t, e) {
    var r, a;
    return t < 0 ||
      100 < t ||
      ((r = e * ((t = Q(t)) + 5) - 5),
      (t = N.ratioOfYs(r, t)),
      (a = Math.abs(t - e)),
      t < e && 0.04 < a) ||
      (t = It(r) + 0.4) < 0 ||
      100 < t
      ? -1
      : t;
  }
  static darker(t, e) {
    var r, a;
    return t < 0 ||
      100 < t ||
      ((r = ((t = Q(t)) + 5) / e - 5),
      (t = N.ratioOfYs(t, r)),
      (a = Math.abs(t - e)),
      t < e && 0.04 < a) ||
      (t = It(r) - 0.4) < 0 ||
      100 < t
      ? -1
      : t;
  }
  static lighterUnsafe(t, e) {
    t = N.lighter(t, e);
    return t < 0 ? 100 : t;
  }
  static darkerUnsafe(t, e) {
    t = N.darker(t, e);
    return t < 0 ? 0 : t;
  }
}
class At {
  static isDisliked(t) {
    var e = 90 <= Math.round(t.hue) && Math.round(t.hue) <= 111,
      r = 16 < Math.round(t.chroma),
      t = Math.round(t.tone) < 65;
    return e && r && t;
  }
  static fixIfDisliked(t) {
    return At.isDisliked(t) ? E.from(t.hue, t.chroma, 70) : t;
  }
}
class m {
  static fromPalette(t) {
    return new m(
      t.name ?? "",
      t.palette,
      t.tone,
      t.isBackground ?? !1,
      t.background,
      t.secondBackground,
      t.contrastCurve,
      t.toneDeltaPair
    );
  }
  constructor(t, e, r, a, n, o, i, s) {
    if (
      ((this.name = t),
      (this.palette = e),
      (this.tone = r),
      (this.isBackground = a),
      (this.background = n),
      (this.secondBackground = o),
      (this.contrastCurve = i),
      (this.toneDeltaPair = s),
      (this.hctCache = new Map()),
      !n && o)
    )
      throw new Error(
        `Color ${t} has secondBackgrounddefined, but background is not defined.`
      );
    if (!n && i)
      throw new Error(
        `Color ${t} has contrastCurvedefined, but background is not defined.`
      );
    if (n && !i)
      throw new Error(
        `Color ${t} has backgrounddefined, but contrastCurve is not defined.`
      );
  }
  getArgb(t) {
    return this.getHct(t).toInt();
  }
  getHct(t) {
    var e = this.hctCache.get(t);
    return (
      null != e ||
        ((e = this.getTone(t)),
        (e = this.palette(t).getHct(e)),
        4 < this.hctCache.size && this.hctCache.clear(),
        this.hctCache.set(t, e)),
      e
    );
  }
  getTone(r) {
    var a = r.contrastLevel < 0;
    if (this.toneDeltaPair) {
      var n = this.toneDeltaPair(r),
        o = n.roleA,
        i = n.roleB,
        s = n.delta,
        h = n.polarity,
        n = n.stayTogether,
        c = this.background(r).getTone(r),
        h =
          "nearer" === h ||
          ("lighter" === h && !r.isDark) ||
          ("darker" === h && r.isDark),
        u = h ? o : i,
        h = h ? i : o,
        i = this.name === u.name,
        o = r.isDark ? 1 : -1,
        l = u.contrastCurve.getContrast(r.contrastLevel),
        d = h.contrastCurve.getContrast(r.contrastLevel),
        u = u.tone(r);
      let t = N.ratioOfTones(c, u) >= l ? u : m.foregroundTone(c, l);
      u = h.tone(r);
      let e = N.ratioOfTones(c, u) >= d ? u : m.foregroundTone(c, d);
      return (
        a && ((t = m.foregroundTone(c, l)), (e = m.foregroundTone(c, d))),
        50 <=
          (t =
            (e - t) * o >= s || ((e = ht(0, 100, t + s * o)) - t) * o >= s
              ? t
              : ht(0, 100, e - s * o)) && t < 60
          ? (e =
              0 < o
                ? ((t = 60), Math.max(e, t + s * o))
                : ((t = 49), Math.min(e, t + s * o)))
          : 50 <= e &&
            e < 60 &&
            (e = n
              ? 0 < o
                ? ((t = 60), Math.max(e, t + s * o))
                : ((t = 49), Math.min(e, t + s * o))
              : 0 < o
              ? 60
              : 49),
        i ? t : e
      );
    }
    {
      let t = this.tone(r);
      return null == this.background
        ? t
        : ((h = this.background(r).getTone(r)),
          (u = this.contrastCurve.getContrast(r.contrastLevel)),
          N.ratioOfTones(h, t) >= u || (t = m.foregroundTone(h, u)),
          a && (t = m.foregroundTone(h, u)),
          this.isBackground &&
            50 <= t &&
            t < 60 &&
            (t = N.ratioOfTones(49, h) >= u ? 49 : 60),
          !this.secondBackground ||
          (([l, c] = [this.background, this.secondBackground]),
          ([d, n] = [l(r).getTone(r), c(r).getTone(r)]),
          ([s, o] = [Math.max(d, n), Math.min(d, n)]),
          N.ratioOfTones(s, t) >= u && N.ratioOfTones(o, t) >= u)
            ? t
            : ((i = N.lighter(s, u)),
              (a = N.darker(o, u)),
              (h = []),
              -1 !== i && h.push(i),
              -1 !== a && h.push(a),
              m.tonePrefersLightForeground(d) || m.tonePrefersLightForeground(n)
                ? i < 0
                  ? 100
                  : i
                : 1 === h.length
                ? h[0]
                : a < 0
                ? 0
                : a));
    }
  }
  static foregroundTone(t, e) {
    var r = N.lighterUnsafe(t, e),
      a = N.darkerUnsafe(t, e),
      n = N.ratioOfTones(r, t),
      o = N.ratioOfTones(a, t);
    return m.tonePrefersLightForeground(t)
      ? ((t = Math.abs(n - o) < 0.1 && n < e && o < e),
        e <= n || o <= n || t ? r : a)
      : e <= o || n <= o
      ? a
      : r;
  }
  static tonePrefersLightForeground(t) {
    return Math.round(t) < 60;
  }
  static toneAllowsLightForeground(t) {
    return Math.round(t) <= 49;
  }
  static enableLightForeground(t) {
    return m.tonePrefersLightForeground(t) && !m.toneAllowsLightForeground(t)
      ? 49
      : t;
  }
}
var ot;
!(function (t) {
  (t[(t.MONOCHROME = 0)] = "MONOCHROME"),
    (t[(t.NEUTRAL = 1)] = "NEUTRAL"),
    (t[(t.TONAL_SPOT = 2)] = "TONAL_SPOT"),
    (t[(t.VIBRANT = 3)] = "VIBRANT"),
    (t[(t.EXPRESSIVE = 4)] = "EXPRESSIVE"),
    (t[(t.FIDELITY = 5)] = "FIDELITY"),
    (t[(t.CONTENT = 6)] = "CONTENT"),
    (t[(t.RAINBOW = 7)] = "RAINBOW"),
    (t[(t.FRUIT_SALAD = 8)] = "FRUIT_SALAD");
})((ot = ot || {}));
class x {
  constructor(t, e, r, a) {
    (this.low = t), (this.normal = e), (this.medium = r), (this.high = a);
  }
  getContrast(t) {
    return t <= -1
      ? this.low
      : t < 0
      ? nt(this.low, this.normal, t - -1)
      : t < 0.5
      ? nt(this.normal, this.medium, +t / 0.5)
      : t < 1
      ? nt(this.medium, this.high, (t - 0.5) / 0.5)
      : this.high;
  }
}
class j {
  constructor(t, e, r, a, n) {
    (this.roleA = t),
      (this.roleB = e),
      (this.delta = r),
      (this.polarity = a),
      (this.stayTogether = n);
  }
}
function et(t) {
  return t.variant === ot.FIDELITY || t.variant === ot.CONTENT;
}
function O(t) {
  return t.variant === ot.MONOCHROME;
}
function Qt(e, r, t, a) {
  let n = t,
    o = E.from(e, r, t);
  if (o.chroma < r) {
    let t = o.chroma;
    for (; o.chroma < r; ) {
      n += a ? -1 : 1;
      var i = E.from(e, r, n);
      if (t > i.chroma || Math.abs(i.chroma - r) < 0.4) break;
      Math.abs(i.chroma - r) < Math.abs(o.chroma - r) && (o = i),
        (t = Math.max(t, i.chroma));
    }
  }
  return n;
}
function Zt(t) {
  return v.make(void 0, void 0, t.isDark ? 30 : 80, void 0, void 0);
}
function Tt(t, e) {
  e = t.inViewingConditions(Zt(e));
  return m.tonePrefersLightForeground(t.tone) &&
    !m.toneAllowsLightForeground(e.tone)
    ? m.enableLightForeground(t.tone)
    : m.enableLightForeground(e.tone);
}
class i {
  static highestSurface(t) {
    return t.isDark ? i.surfaceBright : i.surfaceDim;
  }
}
(i.contentAccentToneDelta = 15),
  (i.primaryPaletteKeyColor = m.fromPalette({
    name: "primary_palette_key_color",
    palette: (t) => t.primaryPalette,
    tone: (t) => t.primaryPalette.keyColor.tone,
  })),
  (i.secondaryPaletteKeyColor = m.fromPalette({
    name: "secondary_palette_key_color",
    palette: (t) => t.secondaryPalette,
    tone: (t) => t.secondaryPalette.keyColor.tone,
  })),
  (i.tertiaryPaletteKeyColor = m.fromPalette({
    name: "tertiary_palette_key_color",
    palette: (t) => t.tertiaryPalette,
    tone: (t) => t.tertiaryPalette.keyColor.tone,
  })),
  (i.neutralPaletteKeyColor = m.fromPalette({
    name: "neutral_palette_key_color",
    palette: (t) => t.neutralPalette,
    tone: (t) => t.neutralPalette.keyColor.tone,
  })),
  (i.neutralVariantPaletteKeyColor = m.fromPalette({
    name: "neutral_variant_palette_key_color",
    palette: (t) => t.neutralVariantPalette,
    tone: (t) => t.neutralVariantPalette.keyColor.tone,
  })),
  (i.background = m.fromPalette({
    name: "background",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 6 : 98),
    isBackground: !0,
  })),
  (i.onBackground = m.fromPalette({
    name: "on_background",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 90 : 10),
    background: (t) => i.background,
    contrastCurve: new x(3, 3, 4.5, 7),
  })),
  (i.surface = m.fromPalette({
    name: "surface",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 6 : 98),
    isBackground: !0,
  })),
  (i.surfaceDim = m.fromPalette({
    name: "surface_dim",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 6 : 87),
    isBackground: !0,
  })),
  (i.surfaceBright = m.fromPalette({
    name: "surface_bright",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 24 : 98),
    isBackground: !0,
  })),
  (i.surfaceContainerLowest = m.fromPalette({
    name: "surface_container_lowest",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 4 : 100),
    isBackground: !0,
  })),
  (i.surfaceContainerLow = m.fromPalette({
    name: "surface_container_low",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 10 : 96),
    isBackground: !0,
  })),
  (i.surfaceContainer = m.fromPalette({
    name: "surface_container",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 12 : 94),
    isBackground: !0,
  })),
  (i.surfaceContainerHigh = m.fromPalette({
    name: "surface_container_high",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 17 : 92),
    isBackground: !0,
  })),
  (i.surfaceContainerHighest = m.fromPalette({
    name: "surface_container_highest",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 22 : 90),
    isBackground: !0,
  })),
  (i.onSurface = m.fromPalette({
    name: "on_surface",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 90 : 10),
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.surfaceVariant = m.fromPalette({
    name: "surface_variant",
    palette: (t) => t.neutralVariantPalette,
    tone: (t) => (t.isDark ? 30 : 90),
    isBackground: !0,
  })),
  (i.onSurfaceVariant = m.fromPalette({
    name: "on_surface_variant",
    palette: (t) => t.neutralVariantPalette,
    tone: (t) => (t.isDark ? 80 : 30),
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(3, 4.5, 7, 11),
  })),
  (i.inverseSurface = m.fromPalette({
    name: "inverse_surface",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 90 : 20),
  })),
  (i.inverseOnSurface = m.fromPalette({
    name: "inverse_on_surface",
    palette: (t) => t.neutralPalette,
    tone: (t) => (t.isDark ? 20 : 95),
    background: (t) => i.inverseSurface,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.outline = m.fromPalette({
    name: "outline",
    palette: (t) => t.neutralVariantPalette,
    tone: (t) => (t.isDark ? 60 : 50),
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1.5, 3, 4.5, 7),
  })),
  (i.outlineVariant = m.fromPalette({
    name: "outline_variant",
    palette: (t) => t.neutralVariantPalette,
    tone: (t) => (t.isDark ? 30 : 80),
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
  })),
  (i.shadow = m.fromPalette({
    name: "shadow",
    palette: (t) => t.neutralPalette,
    tone: (t) => 0,
  })),
  (i.scrim = m.fromPalette({
    name: "scrim",
    palette: (t) => t.neutralPalette,
    tone: (t) => 0,
  })),
  (i.surfaceTint = m.fromPalette({
    name: "surface_tint",
    palette: (t) => t.primaryPalette,
    tone: (t) => (t.isDark ? 80 : 40),
    isBackground: !0,
  })),
  (i.primary = m.fromPalette({
    name: "primary",
    palette: (t) => t.primaryPalette,
    tone: (t) => (O(t) ? (t.isDark ? 100 : 0) : t.isDark ? 80 : 40),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(3, 4.5, 7, 11),
    toneDeltaPair: (t) =>
      new j(i.primaryContainer, i.primary, 15, "nearer", !1),
  })),
  (i.onPrimary = m.fromPalette({
    name: "on_primary",
    palette: (t) => t.primaryPalette,
    tone: (t) => (O(t) ? (t.isDark ? 10 : 90) : t.isDark ? 20 : 100),
    background: (t) => i.primary,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.primaryContainer = m.fromPalette({
    name: "primary_container",
    palette: (t) => t.primaryPalette,
    tone: (t) =>
      et(t)
        ? Tt(t.sourceColorHct, t)
        : O(t)
        ? t.isDark
          ? 85
          : 25
        : t.isDark
        ? 30
        : 90,
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
    toneDeltaPair: (t) =>
      new j(i.primaryContainer, i.primary, 15, "nearer", !1),
  })),
  (i.onPrimaryContainer = m.fromPalette({
    name: "on_primary_container",
    palette: (t) => t.primaryPalette,
    tone: (t) =>
      et(t)
        ? m.foregroundTone(i.primaryContainer.tone(t), 4.5)
        : O(t)
        ? t.isDark
          ? 0
          : 100
        : t.isDark
        ? 90
        : 10,
    background: (t) => i.primaryContainer,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.inversePrimary = m.fromPalette({
    name: "inverse_primary",
    palette: (t) => t.primaryPalette,
    tone: (t) => (t.isDark ? 40 : 80),
    background: (t) => i.inverseSurface,
    contrastCurve: new x(3, 4.5, 7, 11),
  })),
  (i.secondary = m.fromPalette({
    name: "secondary",
    palette: (t) => t.secondaryPalette,
    tone: (t) => (t.isDark ? 80 : 40),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(3, 4.5, 7, 11),
    toneDeltaPair: (t) =>
      new j(i.secondaryContainer, i.secondary, 15, "nearer", !1),
  })),
  (i.onSecondary = m.fromPalette({
    name: "on_secondary",
    palette: (t) => t.secondaryPalette,
    tone: (t) => (O(t) ? (t.isDark ? 10 : 100) : t.isDark ? 20 : 100),
    background: (t) => i.secondary,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.secondaryContainer = m.fromPalette({
    name: "secondary_container",
    palette: (t) => t.secondaryPalette,
    tone: (t) => {
      var e,
        r = t.isDark ? 30 : 90;
      return O(t)
        ? t.isDark
          ? 30
          : 85
        : et(t)
        ? ((e = Qt(
            t.secondaryPalette.hue,
            t.secondaryPalette.chroma,
            r,
            !t.isDark
          )),
          Tt(t.secondaryPalette.getHct(e), t))
        : r;
    },
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
    toneDeltaPair: (t) =>
      new j(i.secondaryContainer, i.secondary, 15, "nearer", !1),
  })),
  (i.onSecondaryContainer = m.fromPalette({
    name: "on_secondary_container",
    palette: (t) => t.secondaryPalette,
    tone: (t) =>
      et(t)
        ? m.foregroundTone(i.secondaryContainer.tone(t), 4.5)
        : t.isDark
        ? 90
        : 10,
    background: (t) => i.secondaryContainer,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.tertiary = m.fromPalette({
    name: "tertiary",
    palette: (t) => t.tertiaryPalette,
    tone: (t) => (O(t) ? (t.isDark ? 90 : 25) : t.isDark ? 80 : 40),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(3, 4.5, 7, 11),
    toneDeltaPair: (t) =>
      new j(i.tertiaryContainer, i.tertiary, 15, "nearer", !1),
  })),
  (i.onTertiary = m.fromPalette({
    name: "on_tertiary",
    palette: (t) => t.tertiaryPalette,
    tone: (t) => (O(t) ? (t.isDark ? 10 : 90) : t.isDark ? 20 : 100),
    background: (t) => i.tertiary,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.tertiaryContainer = m.fromPalette({
    name: "tertiary_container",
    palette: (t) => t.tertiaryPalette,
    tone: (t) => {
      var e;
      return O(t)
        ? t.isDark
          ? 60
          : 49
        : et(t)
        ? ((e = Tt(t.tertiaryPalette.getHct(t.sourceColorHct.tone), t)),
          (e = t.tertiaryPalette.getHct(e)),
          At.fixIfDisliked(e).tone)
        : t.isDark
        ? 30
        : 90;
    },
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
    toneDeltaPair: (t) =>
      new j(i.tertiaryContainer, i.tertiary, 15, "nearer", !1),
  })),
  (i.onTertiaryContainer = m.fromPalette({
    name: "on_tertiary_container",
    palette: (t) => t.tertiaryPalette,
    tone: (t) =>
      O(t)
        ? t.isDark
          ? 0
          : 100
        : et(t)
        ? m.foregroundTone(i.tertiaryContainer.tone(t), 4.5)
        : t.isDark
        ? 90
        : 10,
    background: (t) => i.tertiaryContainer,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.error = m.fromPalette({
    name: "error",
    palette: (t) => t.errorPalette,
    tone: (t) => (t.isDark ? 80 : 40),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(3, 4.5, 7, 11),
    toneDeltaPair: (t) => new j(i.errorContainer, i.error, 15, "nearer", !1),
  })),
  (i.onError = m.fromPalette({
    name: "on_error",
    palette: (t) => t.errorPalette,
    tone: (t) => (t.isDark ? 20 : 100),
    background: (t) => i.error,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.errorContainer = m.fromPalette({
    name: "error_container",
    palette: (t) => t.errorPalette,
    tone: (t) => (t.isDark ? 30 : 90),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
    toneDeltaPair: (t) => new j(i.errorContainer, i.error, 15, "nearer", !1),
  })),
  (i.onErrorContainer = m.fromPalette({
    name: "on_error_container",
    palette: (t) => t.errorPalette,
    tone: (t) => (t.isDark ? 90 : 10),
    background: (t) => i.errorContainer,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.primaryFixed = m.fromPalette({
    name: "primary_fixed",
    palette: (t) => t.primaryPalette,
    tone: (t) => (O(t) ? 40 : 90),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
    toneDeltaPair: (t) =>
      new j(i.primaryFixed, i.primaryFixedDim, 10, "lighter", !0),
  })),
  (i.primaryFixedDim = m.fromPalette({
    name: "primary_fixed_dim",
    palette: (t) => t.primaryPalette,
    tone: (t) => (O(t) ? 30 : 80),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
    toneDeltaPair: (t) =>
      new j(i.primaryFixed, i.primaryFixedDim, 10, "lighter", !0),
  })),
  (i.onPrimaryFixed = m.fromPalette({
    name: "on_primary_fixed",
    palette: (t) => t.primaryPalette,
    tone: (t) => (O(t) ? 100 : 10),
    background: (t) => i.primaryFixedDim,
    secondBackground: (t) => i.primaryFixed,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.onPrimaryFixedVariant = m.fromPalette({
    name: "on_primary_fixed_variant",
    palette: (t) => t.primaryPalette,
    tone: (t) => (O(t) ? 90 : 30),
    background: (t) => i.primaryFixedDim,
    secondBackground: (t) => i.primaryFixed,
    contrastCurve: new x(3, 4.5, 7, 11),
  })),
  (i.secondaryFixed = m.fromPalette({
    name: "secondary_fixed",
    palette: (t) => t.secondaryPalette,
    tone: (t) => (O(t) ? 80 : 90),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
    toneDeltaPair: (t) =>
      new j(i.secondaryFixed, i.secondaryFixedDim, 10, "lighter", !0),
  })),
  (i.secondaryFixedDim = m.fromPalette({
    name: "secondary_fixed_dim",
    palette: (t) => t.secondaryPalette,
    tone: (t) => (O(t) ? 70 : 80),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
    toneDeltaPair: (t) =>
      new j(i.secondaryFixed, i.secondaryFixedDim, 10, "lighter", !0),
  })),
  (i.onSecondaryFixed = m.fromPalette({
    name: "on_secondary_fixed",
    palette: (t) => t.secondaryPalette,
    tone: (t) => 10,
    background: (t) => i.secondaryFixedDim,
    secondBackground: (t) => i.secondaryFixed,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.onSecondaryFixedVariant = m.fromPalette({
    name: "on_secondary_fixed_variant",
    palette: (t) => t.secondaryPalette,
    tone: (t) => (O(t) ? 25 : 30),
    background: (t) => i.secondaryFixedDim,
    secondBackground: (t) => i.secondaryFixed,
    contrastCurve: new x(3, 4.5, 7, 11),
  })),
  (i.tertiaryFixed = m.fromPalette({
    name: "tertiary_fixed",
    palette: (t) => t.tertiaryPalette,
    tone: (t) => (O(t) ? 40 : 90),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
    toneDeltaPair: (t) =>
      new j(i.tertiaryFixed, i.tertiaryFixedDim, 10, "lighter", !0),
  })),
  (i.tertiaryFixedDim = m.fromPalette({
    name: "tertiary_fixed_dim",
    palette: (t) => t.tertiaryPalette,
    tone: (t) => (O(t) ? 30 : 80),
    isBackground: !0,
    background: (t) => i.highestSurface(t),
    contrastCurve: new x(1, 1, 3, 7),
    toneDeltaPair: (t) =>
      new j(i.tertiaryFixed, i.tertiaryFixedDim, 10, "lighter", !0),
  })),
  (i.onTertiaryFixed = m.fromPalette({
    name: "on_tertiary_fixed",
    palette: (t) => t.tertiaryPalette,
    tone: (t) => (O(t) ? 100 : 10),
    background: (t) => i.tertiaryFixedDim,
    secondBackground: (t) => i.tertiaryFixed,
    contrastCurve: new x(4.5, 7, 11, 21),
  })),
  (i.onTertiaryFixedVariant = m.fromPalette({
    name: "on_tertiary_fixed_variant",
    palette: (t) => t.tertiaryPalette,
    tone: (t) => (O(t) ? 90 : 30),
    background: (t) => i.tertiaryFixedDim,
    secondBackground: (t) => i.tertiaryFixed,
    contrastCurve: new x(3, 4.5, 7, 11),
  }));
class G {
  static fromInt(t) {
    t = E.fromInt(t);
    return G.fromHct(t);
  }
  static fromHct(t) {
    return new G(t.hue, t.chroma, t);
  }
  static fromHueAndChroma(t, e) {
    return new G(t, e, G.createKeyColor(t, e));
  }
  constructor(t, e, r) {
    (this.hue = t),
      (this.chroma = e),
      (this.keyColor = r),
      (this.cache = new Map());
  }
  static createKeyColor(e, r) {
    let a = E.from(e, r, 50),
      n = Math.abs(a.chroma - r);
    for (let t = 1; t < 50; t += 1) {
      if (Math.round(r) === Math.round(a.chroma)) return a;
      var o = E.from(e, r, 50 + t),
        i = Math.abs(o.chroma - r),
        i = (i < n && ((n = i), (a = o)), E.from(e, r, 50 - t)),
        o = Math.abs(i.chroma - r);
      o < n && ((n = o), (a = i));
    }
    return a;
  }
  tone(t) {
    let e = this.cache.get(t);
    return (
      void 0 === e &&
        ((e = E.from(this.hue, this.chroma, t).toInt()), this.cache.set(t, e)),
      e
    );
  }
  getHct(t) {
    return E.fromInt(this.tone(t));
  }
}
class S {
  static of(t) {
    return new S(t, !1);
  }
  static contentOf(t) {
    return new S(t, !0);
  }
  static fromColors(t) {
    return S.createPaletteFromColors(!1, t);
  }
  static contentFromColors(t) {
    return S.createPaletteFromColors(!0, t);
  }
  static createPaletteFromColors(t, e) {
    var r,
      a = new S(e.primary, t);
    return (
      e.secondary && ((r = new S(e.secondary, t)), (a.a2 = r.a1)),
      e.tertiary && ((r = new S(e.tertiary, t)), (a.a3 = r.a1)),
      e.error && ((r = new S(e.error, t)), (a.error = r.a1)),
      e.neutral && ((r = new S(e.neutral, t)), (a.n1 = r.n1)),
      e.neutralVariant && ((r = new S(e.neutralVariant, t)), (a.n2 = r.n2)),
      a
    );
  }
  constructor(t, e) {
    var t = E.fromInt(t),
      r = t.hue,
      t = t.chroma;
    e
      ? ((this.a1 = G.fromHueAndChroma(r, t)),
        (this.a2 = G.fromHueAndChroma(r, t / 3)),
        (this.a3 = G.fromHueAndChroma(r + 60, t / 2)),
        (this.n1 = G.fromHueAndChroma(r, Math.min(t / 12, 4))),
        (this.n2 = G.fromHueAndChroma(r, Math.min(t / 6, 8))))
      : ((this.a1 = G.fromHueAndChroma(r, Math.max(48, t))),
        (this.a2 = G.fromHueAndChroma(r, 16)),
        (this.a3 = G.fromHueAndChroma(r + 60, 24)),
        (this.n1 = G.fromHueAndChroma(r, 4)),
        (this.n2 = G.fromHueAndChroma(r, 8))),
      (this.error = G.fromHueAndChroma(25, 84));
  }
}
class te {
  fromInt(t) {
    return Xt(t);
  }
  toInt(t) {
    return Jt(t[0], t[1], t[2]);
  }
  distance(t, e) {
    var r = t[0] - e[0],
      a = t[1] - e[1],
      t = t[2] - e[2];
    return r * r + a * a + t * t;
  }
}
let ee = 10,
  re = 3;
class ne {
  static quantize(e, r, t) {
    var a = new Map(),
      n = new Array(),
      o = new Array(),
      i = new te();
    let s = 0;
    for (let t = 0; t < e.length; t++) {
      var h = e[t],
        c = a.get(h);
      void 0 === c
        ? (s++, n.push(i.fromInt(h)), o.push(h), a.set(h, 1))
        : a.set(h, c + 1);
    }
    var u = new Array();
    for (let t = 0; t < s; t++) {
      var l = o[t],
        l = a.get(l);
      void 0 !== l && (u[t] = l);
    }
    let m = Math.min(t, s);
    0 < r.length && (m = Math.min(m, r.length));
    var d = new Array();
    for (let t = 0; t < r.length; t++) d.push(i.fromInt(r[t]));
    var f = m - d.length;
    if (0 === r.length && 0 < f)
      for (let t = 0; t < f; t++) {
        var R = 100 * Math.random(),
          L = 201 * Math.random() - 100,
          H = 201 * Math.random() - 100;
        d.push(new Array(R, L, H));
      }
    var g = new Array();
    for (let t = 0; t < s; t++) g.push(Math.floor(Math.random() * m));
    var p = new Array();
    for (let e = 0; e < m; e++) {
      p.push(new Array());
      for (let t = 0; t < m; t++) p[e].push(0);
    }
    var C = new Array();
    for (let e = 0; e < m; e++) {
      C.push(new Array());
      for (let t = 0; t < m; t++) C[e].push(new ae());
    }
    var y = new Array();
    for (let t = 0; t < m; t++) y.push(0);
    for (let t = 0; t < ee; t++) {
      for (let e = 0; e < m; e++) {
        for (let t = e + 1; t < m; t++) {
          var b = i.distance(d[e], d[t]);
          (C[t][e].distance = b),
            (C[t][e].index = e),
            (C[e][t].distance = b),
            (C[e][t].index = t);
        }
        C[e].sort();
        for (let t = 0; t < m; t++) p[e][t] = C[e][t].index;
      }
      let a = 0;
      for (let t = 0; t < s; t++) {
        var w,
          v = n[t],
          P = g[t],
          N = d[P],
          M = i.distance(v, N);
        let e = M,
          r = -1;
        for (let t = 0; t < m; t++)
          C[P][t].distance >= 4 * M ||
            ((w = i.distance(v, d[t])) < e && ((e = w), (r = t)));
        -1 !== r &&
          Math.abs(Math.sqrt(e) - Math.sqrt(M)) > re &&
          (a++, (g[t] = r));
      }
      if (0 === a && 0 !== t) break;
      var k = new Array(m).fill(0),
        x = new Array(m).fill(0),
        I = new Array(m).fill(0);
      for (let t = 0; t < m; t++) y[t] = 0;
      for (let t = 0; t < s; t++) {
        var D = g[t],
          _ = n[t],
          O = u[t];
        (y[D] += O), (k[D] += _[0] * O), (x[D] += _[1] * O), (I[D] += _[2] * O);
      }
      for (let t = 0; t < m; t++) {
        var T,
          F,
          E = y[t];
        0 === E
          ? (d[t] = [0, 0, 0])
          : ((T = k[t] / E),
            (F = x[t] / E),
            (E = I[t] / E),
            (d[t] = [T, F, E]));
      }
    }
    var S = new Map();
    for (let t = 0; t < m; t++) {
      var A,
        B = y[t];
      0 === B || ((A = i.toInt(d[t])), S.has(A)) || S.set(A, B);
    }
    return S;
  }
}
class ae {
  constructor() {
    (this.distance = -1), (this.index = -1);
  }
}
class oe {
  static quantize(e) {
    var r = new Map();
    for (let t = 0; t < e.length; t++) {
      var a = e[t];
      Wt(a) < 255 || r.set(a, (r.get(a) ?? 0) + 1);
    }
    return r;
  }
}
let lt = 5,
  W = 33,
  rt = 35937,
  _ = { RED: "red", GREEN: "green", BLUE: "blue" };
class se {
  constructor(t = [], e = [], r = [], a = [], n = [], o = []) {
    (this.weights = t),
      (this.momentsR = e),
      (this.momentsG = r),
      (this.momentsB = a),
      (this.moments = n),
      (this.cubes = o);
  }
  quantize(t, e) {
    this.constructHistogram(t), this.computeMoments();
    t = this.createBoxes(e);
    return this.createResult(t.resultCount);
  }
  constructHistogram(t) {
    var e, r;
    (this.weights = Array.from({ length: rt }).fill(0)),
      (this.momentsR = Array.from({ length: rt }).fill(0)),
      (this.momentsG = Array.from({ length: rt }).fill(0)),
      (this.momentsB = Array.from({ length: rt }).fill(0)),
      (this.moments = Array.from({ length: rt }).fill(0));
    for ([e, r] of oe.quantize(t).entries()) {
      var a = dt(e),
        n = mt(e),
        o = gt(e),
        i = 8 - lt,
        i = this.getIndex(1 + (a >> i), 1 + (n >> i), 1 + (o >> i));
      (this.weights[i] = (this.weights[i] ?? 0) + r),
        (this.momentsR[i] += r * a),
        (this.momentsG[i] += r * n),
        (this.momentsB[i] += r * o),
        (this.moments[i] += r * (a * a + n * n + o * o));
    }
  }
  computeMoments() {
    for (let s = 1; s < W; s++) {
      var h = Array.from({ length: W }).fill(0),
        c = Array.from({ length: W }).fill(0),
        u = Array.from({ length: W }).fill(0),
        l = Array.from({ length: W }).fill(0),
        m = Array.from({ length: W }).fill(0);
      for (let i = 1; i < W; i++) {
        let e = 0,
          r = 0,
          a = 0,
          n = 0,
          o = 0;
        for (let t = 1; t < W; t++) {
          var d = this.getIndex(s, i, t),
            f =
              ((e += this.weights[d]),
              (r += this.momentsR[d]),
              (a += this.momentsG[d]),
              (n += this.momentsB[d]),
              (o += this.moments[d]),
              (h[t] += e),
              (c[t] += r),
              (u[t] += a),
              (l[t] += n),
              (m[t] += o),
              this.getIndex(s - 1, i, t));
          (this.weights[d] = this.weights[f] + h[t]),
            (this.momentsR[d] = this.momentsR[f] + c[t]),
            (this.momentsG[d] = this.momentsG[f] + u[t]),
            (this.momentsB[d] = this.momentsB[f] + l[t]),
            (this.moments[d] = this.moments[f] + m[t]);
        }
      }
    }
  }
  createBoxes(t) {
    this.cubes = Array.from({ length: t })
      .fill(0)
      .map(() => new ie());
    var a = Array.from({ length: t }).fill(0);
    (this.cubes[0].r0 = 0),
      (this.cubes[0].g0 = 0),
      (this.cubes[0].b0 = 0),
      (this.cubes[0].r1 = W - 1),
      (this.cubes[0].g1 = W - 1),
      (this.cubes[0].b1 = W - 1);
    let n = t,
      o = 0;
    for (let r = 1; r < t; r++) {
      this.cut(this.cubes[o], this.cubes[r])
        ? ((a[o] = 1 < this.cubes[o].vol ? this.variance(this.cubes[o]) : 0),
          (a[r] = 1 < this.cubes[r].vol ? this.variance(this.cubes[r]) : 0))
        : ((a[o] = 0), r--);
      let e = a[(o = 0)];
      for (let t = 1; t <= r; t++) a[t] > e && ((e = a[t]), (o = t));
      if (e <= 0) {
        n = r + 1;
        break;
      }
    }
    return new ce(t, n);
  }
  createResult(e) {
    var r = [];
    for (let t = 0; t < e; ++t) {
      var a,
        n,
        o = this.cubes[t],
        i = this.volume(o, this.weights);
      0 < i &&
        ((a = Math.round(this.volume(o, this.momentsR) / i)),
        (n = Math.round(this.volume(o, this.momentsG) / i)),
        (o = Math.round(this.volume(o, this.momentsB) / i)),
        r.push((255 << 24) | ((255 & a) << 16) | ((255 & n) << 8) | (255 & o)));
    }
    return r;
  }
  variance(t) {
    var e = this.volume(t, this.momentsR),
      r = this.volume(t, this.momentsG),
      a = this.volume(t, this.momentsB);
    return (
      this.moments[this.getIndex(t.r1, t.g1, t.b1)] -
      this.moments[this.getIndex(t.r1, t.g1, t.b0)] -
      this.moments[this.getIndex(t.r1, t.g0, t.b1)] +
      this.moments[this.getIndex(t.r1, t.g0, t.b0)] -
      this.moments[this.getIndex(t.r0, t.g1, t.b1)] +
      this.moments[this.getIndex(t.r0, t.g1, t.b0)] +
      this.moments[this.getIndex(t.r0, t.g0, t.b1)] -
      this.moments[this.getIndex(t.r0, t.g0, t.b0)] -
      (e * e + r * r + a * a) / this.volume(t, this.weights)
    );
  }
  cut(t, e) {
    var r = this.volume(t, this.momentsR),
      a = this.volume(t, this.momentsG),
      n = this.volume(t, this.momentsB),
      o = this.volume(t, this.weights),
      i = this.maximize(t, _.RED, t.r0 + 1, t.r1, r, a, n, o),
      s = this.maximize(t, _.GREEN, t.g0 + 1, t.g1, r, a, n, o),
      h = this.maximize(t, _.BLUE, t.b0 + 1, t.b1, r, a, n, o);
    let c;
    (r = i.maximum), (a = s.maximum), (n = h.maximum);
    if (a <= r && n <= r) {
      if (i.cutLocation < 0) return !1;
      c = _.RED;
    } else c = r <= a && n <= a ? _.GREEN : _.BLUE;
    switch (((e.r1 = t.r1), (e.g1 = t.g1), (e.b1 = t.b1), c)) {
      case _.RED:
        (t.r1 = i.cutLocation), (e.r0 = t.r1), (e.g0 = t.g0), (e.b0 = t.b0);
        break;
      case _.GREEN:
        (t.g1 = s.cutLocation), (e.r0 = t.r0), (e.g0 = t.g1), (e.b0 = t.b0);
        break;
      case _.BLUE:
        (t.b1 = h.cutLocation), (e.r0 = t.r0), (e.g0 = t.g0), (e.b0 = t.b1);
        break;
      default:
        throw new Error("unexpected direction " + c);
    }
    return (
      (t.vol = (t.r1 - t.r0) * (t.g1 - t.g0) * (t.b1 - t.b0)),
      (e.vol = (e.r1 - e.r0) * (e.g1 - e.g0) * (e.b1 - e.b0)),
      !0
    );
  }
  maximize(e, r, a, n, o, i, s, h) {
    var c,
      u = this.bottom(e, r, this.momentsR),
      l = this.bottom(e, r, this.momentsG),
      m = this.bottom(e, r, this.momentsB),
      d = this.bottom(e, r, this.weights);
    let f = 0,
      g = -1,
      p,
      C,
      y,
      b;
    for (let t = a; t < n; t++)
      (p = u + this.top(e, r, t, this.momentsR)),
        (C = l + this.top(e, r, t, this.momentsG)),
        (y = m + this.top(e, r, t, this.momentsB)),
        0 !== (b = d + this.top(e, r, t, this.weights)) &&
          ((c = (p * p + C * C + y * y) / +b),
          (p = o - p),
          (C = i - C),
          (y = s - y),
          0 != (b = h - b) && (c += (p * p + C * C + y * y) / b) > f) &&
          ((f = c), (g = t));
    return new le(g, f);
  }
  volume(t, e) {
    return (
      e[this.getIndex(t.r1, t.g1, t.b1)] -
      e[this.getIndex(t.r1, t.g1, t.b0)] -
      e[this.getIndex(t.r1, t.g0, t.b1)] +
      e[this.getIndex(t.r1, t.g0, t.b0)] -
      e[this.getIndex(t.r0, t.g1, t.b1)] +
      e[this.getIndex(t.r0, t.g1, t.b0)] +
      e[this.getIndex(t.r0, t.g0, t.b1)] -
      e[this.getIndex(t.r0, t.g0, t.b0)]
    );
  }
  bottom(t, e, r) {
    switch (e) {
      case _.RED:
        return (
          -r[this.getIndex(t.r0, t.g1, t.b1)] +
          r[this.getIndex(t.r0, t.g1, t.b0)] +
          r[this.getIndex(t.r0, t.g0, t.b1)] -
          r[this.getIndex(t.r0, t.g0, t.b0)]
        );
      case _.GREEN:
        return (
          -r[this.getIndex(t.r1, t.g0, t.b1)] +
          r[this.getIndex(t.r1, t.g0, t.b0)] +
          r[this.getIndex(t.r0, t.g0, t.b1)] -
          r[this.getIndex(t.r0, t.g0, t.b0)]
        );
      case _.BLUE:
        return (
          -r[this.getIndex(t.r1, t.g1, t.b0)] +
          r[this.getIndex(t.r1, t.g0, t.b0)] +
          r[this.getIndex(t.r0, t.g1, t.b0)] -
          r[this.getIndex(t.r0, t.g0, t.b0)]
        );
      default:
        throw new Error("unexpected direction $direction");
    }
  }
  top(t, e, r, a) {
    switch (e) {
      case _.RED:
        return (
          a[this.getIndex(r, t.g1, t.b1)] -
          a[this.getIndex(r, t.g1, t.b0)] -
          a[this.getIndex(r, t.g0, t.b1)] +
          a[this.getIndex(r, t.g0, t.b0)]
        );
      case _.GREEN:
        return (
          a[this.getIndex(t.r1, r, t.b1)] -
          a[this.getIndex(t.r1, r, t.b0)] -
          a[this.getIndex(t.r0, r, t.b1)] +
          a[this.getIndex(t.r0, r, t.b0)]
        );
      case _.BLUE:
        return (
          a[this.getIndex(t.r1, t.g1, r)] -
          a[this.getIndex(t.r1, t.g0, r)] -
          a[this.getIndex(t.r0, t.g1, r)] +
          a[this.getIndex(t.r0, t.g0, r)]
        );
      default:
        throw new Error("unexpected direction $direction");
    }
  }
  getIndex(t, e, r) {
    return (t << (2 * lt)) + (t << (lt + 1)) + t + (e << lt) + e + r;
  }
}
class ie {
  constructor(t = 0, e = 0, r = 0, a = 0, n = 0, o = 0, i = 0) {
    (this.r0 = t),
      (this.r1 = e),
      (this.g0 = r),
      (this.g1 = a),
      (this.b0 = n),
      (this.b1 = o),
      (this.vol = i);
  }
}
class ce {
  constructor(t, e) {
    (this.requestedCount = t), (this.resultCount = e);
  }
}
class le {
  constructor(t, e) {
    (this.cutLocation = t), (this.maximum = e);
  }
}
class ue {
  static quantize(t, e) {
    var r = new se().quantize(t, e);
    return ne.quantize(t, r, e);
  }
}
class X {
  get primary() {
    return this.props.primary;
  }
  get onPrimary() {
    return this.props.onPrimary;
  }
  get primaryContainer() {
    return this.props.primaryContainer;
  }
  get onPrimaryContainer() {
    return this.props.onPrimaryContainer;
  }
  get secondary() {
    return this.props.secondary;
  }
  get onSecondary() {
    return this.props.onSecondary;
  }
  get secondaryContainer() {
    return this.props.secondaryContainer;
  }
  get onSecondaryContainer() {
    return this.props.onSecondaryContainer;
  }
  get tertiary() {
    return this.props.tertiary;
  }
  get onTertiary() {
    return this.props.onTertiary;
  }
  get tertiaryContainer() {
    return this.props.tertiaryContainer;
  }
  get onTertiaryContainer() {
    return this.props.onTertiaryContainer;
  }
  get error() {
    return this.props.error;
  }
  get onError() {
    return this.props.onError;
  }
  get errorContainer() {
    return this.props.errorContainer;
  }
  get onErrorContainer() {
    return this.props.onErrorContainer;
  }
  get background() {
    return this.props.background;
  }
  get onBackground() {
    return this.props.onBackground;
  }
  get surface() {
    return this.props.surface;
  }
  get onSurface() {
    return this.props.onSurface;
  }
  get surfaceVariant() {
    return this.props.surfaceVariant;
  }
  get onSurfaceVariant() {
    return this.props.onSurfaceVariant;
  }
  get outline() {
    return this.props.outline;
  }
  get outlineVariant() {
    return this.props.outlineVariant;
  }
  get shadow() {
    return this.props.shadow;
  }
  get scrim() {
    return this.props.scrim;
  }
  get inverseSurface() {
    return this.props.inverseSurface;
  }
  get inverseOnSurface() {
    return this.props.inverseOnSurface;
  }
  get inversePrimary() {
    return this.props.inversePrimary;
  }
  static light(t) {
    return X.lightFromCorePalette(S.of(t));
  }
  static dark(t) {
    return X.darkFromCorePalette(S.of(t));
  }
  static lightContent(t) {
    return X.lightFromCorePalette(S.contentOf(t));
  }
  static darkContent(t) {
    return X.darkFromCorePalette(S.contentOf(t));
  }
  static lightFromCorePalette(t) {
    return new X({
      primary: t.a1.tone(40),
      onPrimary: t.a1.tone(100),
      primaryContainer: t.a1.tone(90),
      onPrimaryContainer: t.a1.tone(10),
      secondary: t.a2.tone(40),
      onSecondary: t.a2.tone(100),
      secondaryContainer: t.a2.tone(90),
      onSecondaryContainer: t.a2.tone(10),
      tertiary: t.a3.tone(40),
      onTertiary: t.a3.tone(100),
      tertiaryContainer: t.a3.tone(90),
      onTertiaryContainer: t.a3.tone(10),
      error: t.error.tone(40),
      onError: t.error.tone(100),
      errorContainer: t.error.tone(90),
      onErrorContainer: t.error.tone(10),
      background: t.n1.tone(99),
      onBackground: t.n1.tone(10),
      surface: t.n1.tone(99),
      onSurface: t.n1.tone(10),
      surfaceVariant: t.n2.tone(90),
      onSurfaceVariant: t.n2.tone(30),
      outline: t.n2.tone(50),
      outlineVariant: t.n2.tone(80),
      shadow: t.n1.tone(0),
      scrim: t.n1.tone(0),
      inverseSurface: t.n1.tone(20),
      inverseOnSurface: t.n1.tone(95),
      inversePrimary: t.a1.tone(80),
    });
  }
  static darkFromCorePalette(t) {
    return new X({
      primary: t.a1.tone(80),
      onPrimary: t.a1.tone(20),
      primaryContainer: t.a1.tone(30),
      onPrimaryContainer: t.a1.tone(90),
      secondary: t.a2.tone(80),
      onSecondary: t.a2.tone(20),
      secondaryContainer: t.a2.tone(30),
      onSecondaryContainer: t.a2.tone(90),
      tertiary: t.a3.tone(80),
      onTertiary: t.a3.tone(20),
      tertiaryContainer: t.a3.tone(30),
      onTertiaryContainer: t.a3.tone(90),
      error: t.error.tone(80),
      onError: t.error.tone(20),
      errorContainer: t.error.tone(30),
      onErrorContainer: t.error.tone(80),
      background: t.n1.tone(10),
      onBackground: t.n1.tone(90),
      surface: t.n1.tone(10),
      onSurface: t.n1.tone(90),
      surfaceVariant: t.n2.tone(30),
      onSurfaceVariant: t.n2.tone(80),
      outline: t.n2.tone(60),
      outlineVariant: t.n2.tone(30),
      shadow: t.n1.tone(0),
      scrim: t.n1.tone(0),
      inverseSurface: t.n1.tone(90),
      inverseOnSurface: t.n1.tone(20),
      inversePrimary: t.a1.tone(40),
    });
  }
  constructor(t) {
    this.props = t;
  }
  toJSON() {
    return { ...this.props };
  }
}
let he = { desired: 4, fallbackColorARGB: 4282549748, filter: !0 };
function fe(t, e) {
  return t.score > e.score ? -1 : t.score < e.score ? 1 : 0;
}
class H {
  constructor() {}
  static score(t, e) {
    var r,
      a,
      { desired: n, fallbackColorARGB: e, filter: o } = { ...he, ...e },
      i = [],
      s = new Array(360).fill(0);
    let h = 0;
    for ([r, a] of t.entries()) {
      var c = E.fromInt(r),
        c = (i.push(c), Math.floor(c.hue));
      (s[c] += a), (h += a);
    }
    var u = new Array(360).fill(0);
    for (let e = 0; e < 360; e++) {
      var l = s[e] / h;
      for (let t = e - 14; t < e + 16; t++) u[Ot(t)] += l;
    }
    var m,
      d = new Array();
    for (m of i) {
      var f,
        g = u[Ot(Math.round(m.hue))];
      (o && (m.chroma < H.CUTOFF_CHROMA || g <= H.CUTOFF_EXCITED_PROPORTION)) ||
        ((g = 100 * g * H.WEIGHT_PROPORTION),
        (f =
          m.chroma < H.TARGET_CHROMA
            ? H.WEIGHT_CHROMA_BELOW
            : H.WEIGHT_CHROMA_ABOVE),
        (f = (m.chroma - H.TARGET_CHROMA) * f),
        d.push({ hct: m, score: g + f }));
    }
    d.sort(fe);
    var p = [];
    for (let r = 90; 15 <= r; r--) {
      p.length = 0;
      for (let { hct: e } of d)
        if ((p.find((t) => Nt(e.hue, t.hue) < r) || p.push(e), n <= p.length))
          break;
      if (n <= p.length) break;
    }
    var C,
      y = [];
    0 === p.length && y.push(e);
    for (C of p) y.push(C.toInt());
    return y;
  }
}
function F(t) {
  var e,
    r,
    a = dt(t),
    n = mt(t),
    t = gt(t),
    o = [a.toString(16), n.toString(16), t.toString(16)];
  for ([e, r] of o.entries()) 1 === r.length && (o[e] = "0" + r);
  return "#" + o.join("");
}
function de(t) {
  var e = 3 === (t = t.replace("#", "")).length,
    r = 6 === t.length,
    a = 8 === t.length;
  if (!e && !r && !a) throw new Error("unexpected hex " + t);
  let n = 0,
    o = 0,
    i = 0;
  return (
    e
      ? ((n = J(t.slice(0, 1).repeat(2))),
        (o = J(t.slice(1, 2).repeat(2))),
        (i = J(t.slice(2, 3).repeat(2))))
      : r
      ? ((n = J(t.slice(0, 2))), (o = J(t.slice(2, 4))), (i = J(t.slice(4, 6))))
      : a &&
        ((n = J(t.slice(2, 4))),
        (o = J(t.slice(4, 6))),
        (i = J(t.slice(6, 8)))),
    ((255 << 24) | ((255 & n) << 16) | ((255 & o) << 8) | (255 & i)) >>> 0
  );
}
function J(t) {
  return parseInt(t, 16);
}
async function me(h) {
  var e = await new Promise((o, t) => {
      let i = document.createElement("canvas"),
        s = i.getContext("2d");
      var e;
      s
        ? ((e = () => {
            (i.width = h.width), (i.height = h.height), s.drawImage(h, 0, 0);
            let t = [0, 0, h.width, h.height];
            var e = h.dataset.area,
              [e, r, a, n] = (t =
                e && /^\d+(\s*,\s*\d+){3}$/.test(e)
                  ? e.split(/\s*,\s*/).map((t) => parseInt(t, 10))
                  : t);
            o(s.getImageData(e, r, a, n).data);
          }),
          h.complete ? e() : (h.onload = e))
        : t(new Error("Could not get canvas context"));
    }),
    r = [];
  for (let t = 0; t < e.length; t += 4) {
    var a = e[t],
      n = e[t + 1],
      o = e[t + 2];
    e[t + 3] < 255 || ((a = ft(a, n, o)), r.push(a));
  }
  var t = ue.quantize(r, 128);
  return H.score(t)[0];
}
function Gt(e, t = []) {
  var r = S.of(e);
  return {
    source: e,
    schemes: { light: X.light(e), dark: X.dark(e) },
    palettes: {
      primary: r.a1,
      secondary: r.a2,
      tertiary: r.a3,
      neutral: r.n1,
      neutralVariant: r.n2,
      error: r.error,
    },
    customColors: t.map((t) => ge(e, t)),
  };
}
async function Lt(t, e = []) {
  return Gt(await me(t), e);
}
function ge(t, e) {
  let r = e.value;
  var a = r,
    a = (e.blend && (r = xt.harmonize(a, t)), S.of(r).a1);
  return {
    color: e,
    value: r,
    light: {
      color: a.tone(40),
      onColor: a.tone(100),
      colorContainer: a.tone(90),
      onColorContainer: a.tone(10),
    },
    dark: {
      color: a.tone(80),
      onColor: a.tone(20),
      colorContainer: a.tone(30),
      onColorContainer: a.tone(90),
    },
  };
}
function Pt(t) {
  var e,
    r = JSON.parse(JSON.stringify(t.schemes));
  for (e in r) for (var a in r[e]) r[e][a] = F(r[e][a]);
  return (
    (r.dark.surfaceDim = F(t.palettes.neutral.tone(6))),
    (r.dark.surface = F(t.palettes.neutral.tone(6))),
    (r.dark.surfaceBright = F(t.palettes.neutral.tone(24))),
    (r.dark.surfaceContainerLowest = F(t.palettes.neutral.tone(4))),
    (r.dark.surfaceContainerLow = F(t.palettes.neutral.tone(10))),
    (r.dark.surfaceContainer = F(t.palettes.neutral.tone(12))),
    (r.dark.surfaceContainerHigh = F(t.palettes.neutral.tone(17))),
    (r.dark.surfaceContainerHighest = F(t.palettes.neutral.tone(22))),
    (r.dark.onSurface = F(t.palettes.neutral.tone(90))),
    (r.dark.onSurfaceVariant = F(t.palettes.neutralVariant.tone(80))),
    (r.dark.outline = F(t.palettes.neutralVariant.tone(60))),
    (r.dark.outlineVariant = F(t.palettes.neutralVariant.tone(30))),
    (r.light.surfaceDim = F(t.palettes.neutral.tone(87))),
    (r.light.surface = F(t.palettes.neutral.tone(98))),
    (r.light.surfaceBright = F(t.palettes.neutral.tone(98))),
    (r.light.surfaceContainerLowest = F(t.palettes.neutral.tone(100))),
    (r.light.surfaceContainerLow = F(t.palettes.neutral.tone(96))),
    (r.light.surfaceContainer = F(t.palettes.neutral.tone(94))),
    (r.light.surfaceContainerHigh = F(t.palettes.neutral.tone(92))),
    (r.light.surfaceContainerHighest = F(t.palettes.neutral.tone(90))),
    (r.light.onSurface = F(t.palettes.neutral.tone(10))),
    (r.light.onSurfaceVariant = F(t.palettes.neutralVariant.tone(30))),
    (r.light.outline = F(t.palettes.neutralVariant.tone(50))),
    (r.light.outlineVariant = F(t.palettes.neutralVariant.tone(80))),
    r
  );
}
async function pe(e) {
  var r,
    a = { light: {}, dark: {} };
  try {
    if ("string" == typeof e && /^\#[0-9a-f]+$/i.test(e)) return Pt(Gt(de(e)));
    if (e.src) return Pt(await Lt(e));
    let t = new Blob();
    return ("string" == typeof e && (t = await fetch(e).then((t) => t.blob())),
    e.size && (t = e),
    e.files && e.files[0] && (t = e.files[0]),
    (t =
      e.target && e.target.files && e.target.files[0] ? e.target.files[0] : t)
      .size)
      ? (((r = new Image(64)).src = URL.createObjectURL(t)), Pt(await Lt(r)))
      : a;
  } catch {
    return a;
  }
}
(H.TARGET_CHROMA = 48),
  (H.WEIGHT_PROPORTION = 0.7),
  (H.WEIGHT_CHROMA_ABOVE = 0.3),
  (H.WEIGHT_CHROMA_BELOW = 0.1),
  (H.CUTOFF_CHROMA = 5),
  (H.CUTOFF_EXCITED_PROPORTION = 0.01),
  (globalThis.materialDynamicColors = pe);
export default globalThis.materialDynamicColors;
